# include what you want

PATH=$PATH:$HOME/bin
if [ -d "/opt/mt/bin" ]; then
    PATH=$PATH:/opt/mt/bin
fi

if [ -d "/opt/mt/man" ]; then
    # leading colon means append to system
    # manpath
    MANPATH=":/opt/mt/man"
fi

if [ -d "/Applications/android-sdk-mac_x86/tools" ]; then
   PATH=$PATH:/Applications/android-sdk-mac_x86/tools
fi
if [ -d "/Applications/android-sdk-mac_x86/platform-tools" ]; then
   PATH=$PATH:/Applications/android-sdk-mac_x86/platform-tools
fi

/sbin/ifconfig 2> /dev/null > /dev/null
if [ $? != 0 ]; then
    alias myip='echo 127.0.0.1'
else
    alias myip='/sbin/ifconfig | grep "inet " | grep -v "127.0.0.1" | head -n1 | grep -o "[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*" | head -n1'
fi

####
# put any bash customizations in here
if [ -z "$PS1" ]; then
   return
fi

PROMPT_DIRTRIM=3;

if [ "$SUDO_USER" != '' ]; then
    PS1="\[\e[36;1m\][\[\e[37;1m\] \[\e[37;1;41m\]\u\[\e[0m\]\[\e[37;1m\]@\h\[\e[36;1m\] ]\[\e[37;1m\] \[\e[36;1m\][$(myip | perl -e 'my ($ip)=<>; if($ip =~ /^10\./) { print "\\[\\e[32;1m\\]VM"; } else { print "\\[\\e[31;1m\\]PRODCTION"; } print "\\[\\e[36;1m\\]] [\\[\\e[32;1m\\]$ip"')\[\e[36;1m\]]\n\[\e[36;1m\][ \w\[\e[36;1m\] ]-> \[\e[0m\]"
else
    PS1="\[\e[36;1m\][ \w\[\e[36;1m\] ] \[\e[36;1m\][\[\e[37;1m\] \u@\h\[\e[36;1m\] ]\[\e[37;1m\] \[\e[36;1m\][$(myip | perl -e 'my ($ip)=<>; if($ip =~ /^10\./) { print "\\[\\e[32;1m\\]VM"; } else { print "\\[\\e[31;1m\\]PRODUCTION"; } print "\\[\\e[36;1m\\]] [\\[\\e[32;1m\\]$ip"')\[\e[36;1m\]]\n\[\e[36;1m\]-> \[\e[0m\]"
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

export PS1


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion -a "$(complete | wc -l)" = "0" ]; then
    . /etc/bash_completion
fi

# set up colors for ls
export CLICOLOR=1
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b ~/.dircolors`"
    alias ls='ls --color=auto'
fi

export EDITOR='vim'
export GIT_EDITOR='vim'

if [ "$(locale -a | grep 'en_US.utf8')" = 'en_US.utf8' ]; then
    export LANG=en_US.utf8
    export LC_ALL=en_US.utf8
    export LESSCHARSET='utf-8'
elif [ "$(locale -a  | grep 'en_US.UTF-8')" = 'en_US.UTF-8' ]; then
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LESSCHARSET='utf-8'
else
    export LANG=en_US
    export LC_ALL=C
    export LESSCHARSET='utf-8'
fi

PERL_LL="perl -I $HOME/perl5/lib/perl5 -Mlocal::lib"
$PERL_LL -e '1;' 2>/dev/null && eval $($PERL_LL) && echo "using perl local lib"
export PATH MANPATH

if [ -e /usr/libexec/java_home ]; then
    export JAVA_HOME=$(/usr/libexec/java_home -v 1.7+ 2>/dev/null)
    if [ ! -z $JAVA_HOME ]; then
        export PATH=${JAVA_HOME}/bin:$PATH
    fi
fi

# don't table complete files starting with a .
bind 'set match-hidden-files off' 

if [ -e /usr/bin/open ]; then
    function dash_doc_search() {
        /usr/bin/open dash://$1
    }
    alias ?=dash_doc_search
fi

DOCKER_CMD=$(which docker)
DOCKER_MACHINE_CMD=$(which docker-machine)

if [ -e "$DOCKER_CMD" ]; then
    # docker on OSX prep
    if [ -e "$DOCKER_MACHINE_CMD" ]; then
        ($DOCKER_MACHINE_CMD status default >/dev/null) || ($DOCKER_MACHINE_CMD start default >/dev/null)
        if [ -z $DOCKER_MACHINE_HOST ]; then
            eval $($DOCKER_MACHINE_CMD env default)
        fi
    fi

    alias ynab="docker run -v ~/DockerExport/ofxclient/conf:/export -v ~/DockerExport/ofxclient/secret:/root/.local/share/python_keyring -i -t captin411/ofxclient -d /export/download.ofx && /usr/bin/open $HOME/DockerExport/ofxclient/conf/download.ofx"

fi

